/* eslint-disable @typescript-eslint/no-explicit-any */
/* eslint-disable prefer-const */
/* eslint-disable @angular-eslint/prefer-inject */
import { Injectable } from '@angular/core'; 
// Injectable ูุฌุนู ุงูููุงุณ ุฎุฏูุฉ ูููู ุญูููุง ูู ุฃู ููุงู ุฏุงุฎู ุงูุชุทุจูู

import { HttpClient, HttpParams } from '@angular/common/http'; 
// HttpClient ูุฅุฌุฑุงุก ุทูุจุงุช HTTP
// HttpParams ูุฅุถุงูุฉ ุจุงุฑุงููุชุฑุงุช (parameters) ูุทูุจุงุช GET

import { Observable } from 'rxjs'; 
// Observable ููุชุนุงูู ูุน ุงูุจูุงูุงุช ุบูุฑ ุงููุชุฒุงููุฉ ูู API

@Injectable({
  providedIn: 'root' 
  // ูุฌุนู ูุฐู ุงูุฎุฏูุฉ ูุชุงุญุฉ ุนูู ูุณุชูู ุงูุชุทุจูู ุจุฃูููู
})
export class ProductApi {
  private url = 'https://api.escuelajs.co/api/v1/products'; 
  // ุฑุงุจุท API ุงูุฎุงุต ุจุงูููุชุฌุงุช โ ูุฐุง ูุซุงูุ ูููู ุชุบููุฑู ุญุณุจ API ุงููุนูู

  constructor(private http: HttpClient) {} 
  // ุญูู HttpClient ูุงุณุชุฎุฏุงูู ูู ุฅุฑุณุงู ูุงุณุชูุจุงู ุงูุจูุงูุงุช ูู API

  // ๐ข ุฏุงูุฉ ูุฌูุจ ุงูููุชุฌุงุช ูุน ุฏุนู ุงูููุงุชุฑ ูPagination
  getProducts(skip: number, limit: number, search: string, price_min: number, price_max: number): Observable<any> {
    let params = new HttpParams() // ุฅูุดุงุก HttpParams ูุฅุฑุณุงู ุงูุจุงุฑุงููุชุฑุงุช ูุน ุงูุทูุจ
      .set('offset', skip) // ุชุญุฏูุฏ ุนุฏุฏ ุงูุนูุงุตุฑ ุงูุชู ูุฌุจ ุชุฎุทููุง
      .set('limit', limit) // ุชุญุฏูุฏ ุนุฏุฏ ุงูููุชุฌุงุช ููู ุตูุญุฉ
      .set('title', search) // ููุชุฑุฉ ุงูููุชุฌุงุช ุจุงูุจุญุซ ุนู ุงูุนููุงู
      .set('price_min', price_min) // ููุชุฑุฉ ุญุณุจ ุงูุญุฏ ุงูุฃุฏูู ููุณุนุฑ
      .set('price_max', price_max); // ููุชุฑุฉ ุญุณุจ ุงูุญุฏ ุงูุฃูุตู ููุณุนุฑ

    return this.http.get(this.url, { params }); 
    // ุฅุฑุณุงู ุทูุจ GET ููู API ูุน ุงูุจุงุฑุงููุชุฑุงุช
  }

  // ๐ข ุฏุงูุฉ ูุฌูุจ ูู ุงูููุชุฌุงุช ุจุฏูู Pagination โ ูููุฏุฉ ููุนุฑูุฉ ุงูุนุฏุฏ ุฃู ุงูุจุญุซ
  getFullProducts(search: string): Observable<any> {
    let params = new HttpParams().set('title', search); 
    // ููุชุฑุฉ ุงูููุชุฌุงุช ุจูุงุกู ุนูู ูุต ุงูุจุญุซ ููุท

    return this.http.get(this.url, { params }); 
    // ุฅุฑุณุงู ุทูุจ GET ููู API ูุน ุงูุจุงุฑุงููุชุฑุงุช
  }

  // ๐ข ุฏุงูุฉ ูุฅุถุงูุฉ ููุชุฌ ุฌุฏูุฏ
  addProduct(product: any): Observable<any> {
    return this.http.post(this.url, product); 
    // ุฅุฑุณุงู ุทูุจ POST ููู API ูุน ุจูุงูุงุช ุงูููุชุฌ
  }

  // ๐ข ุฏุงูุฉ ูุฌูุจ ููุชุฌ ูุนูู ุจูุงุณุทุฉ ID
  getProductById(id: number): Observable<any> {
    return this.http.get(`${this.url}/${id}`); 
    // ุฅุฑุณุงู ุทูุจ GET ููู API ูุน ุฑูู ุงูููุชุฌ
  }

  // ๐ข ุฏุงูุฉ ูุญุฐู ููุชุฌ ุจูุงุณุทุฉ ID
  deleteProduct(id: number): Observable<any> {
    return this.http.delete(`${this.url}/${id}`); 
    // ุฅุฑุณุงู ุทูุจ DELETE ููู API ูุน ุฑูู ุงูููุชุฌ
  }

  // ๐ข ุฏุงูุฉ ูุชุญุฏูุซ ุจูุงูุงุช ููุชุฌ ูุนูู
  updateProduct(id: number, product: any): Observable<any> {
    return this.http.put(`${this.url}/${id}`, product); 
    // ุฅุฑุณุงู ุทูุจ PUT ููู API ูุน ุฑูู ุงูููุชุฌ ูุจูุงูุงุช ุงูุชุญุฏูุซ
  }
}
